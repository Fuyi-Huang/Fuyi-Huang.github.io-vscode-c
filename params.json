{
  "name": "如何在vscode上搭建c、c++的编译环境",
  "tagline": "About how to compile and execute c or c++",
  "body": "### 总体流程\r\n1.下载安装vscode\r\n\r\n2.安装cpptools\r\n\r\n3.安装编译环境\r\n\r\n4.修改vscode调试配置文件\r\n\r\n\r\n### 下载安装vscode\r\n[http://code.visualstudio.com](http://code.visualstudio.com)\r\n\r\n### 安装cpptools\r\n打开你的vscode，按ctrl + e，输入：\r\n\r\n  ext install cpptools\r\n\r\n然后vscode就会联网搜索查找插件列表，然后选择一个评价高的下载安装就好，安装好之后vscode会提示重启，重启即可。\r\n\r\n### 安装编译调试环境\r\n目前windows下调试仅支持 Cygwin 和 MinGW。 \r\n\r\n我电脑里有安装有MinGW，没有的话上网下一个安装就好。\r\n\r\n安装好之后进入MinGW，然后注意一下gdb一定要选上，否则无法调试\r\n\r\n![image](https://github.com/Fuyi-Huang/Fuyi-Huang.github.io-vscode-c/raw/master/pictures/capture.JPG)\r\n\r\n选中之后右键Make for Installation进行标记，其中gcc和g++为c和c++编译器。\r\n\r\n然后配置系统环境变量path，这一步是必须的。\r\n\r\n在 我的电脑 上右键属性：\r\n\r\n然后做如下操作：\r\n\r\n![image](https://github.com/Fuyi-Huang/Fuyi-Huang.github.io-vscode-c/raw/master/pictures/capture1.JPG)\r\n\r\n\r\n### 修改vscode调试配置文件\r\n\r\n打开vscode，**注意配置系统环境变量path后重启一下vscode **\r\n\r\n注意vscode调试需要在打开的文件夹中进行\r\n\r\n打开文件夹后，新建test.cpp进行输入代码测试： \r\n\r\n如图示进入调试界面选择C++：\r\n\r\n![image](https://github.com/Fuyi-Huang/Fuyi-Huang.github.io-vscode-c/raw/master/pictures/capture2.jpg)\r\n\r\n![image](https://github.com/Fuyi-Huang/Fuyi-Huang.github.io-vscode-c/raw/master/pictures/capture3.jpg)\r\n\r\n然后会在工作目录下的生成一个launch.json的启动配置文件: \r\n\r\n![image](https://github.com/Fuyi-Huang/Fuyi-Huang.github.io-vscode-c/raw/master/pictures/capture4.jpg)\r\n\r\n使用下面代码替换该文件：\r\n\r\n`\r\n{\r\n\r\n    \"version\": \"0.2.0\",\r\n\r\n    \"configurations\": [\r\n\r\n        {\r\n\r\n            \"name\": \"C++ Launch (GDB)\",                 // 配置名称，将会在启动配置的下拉菜单中显示\r\n\r\n            \"type\": \"cppdbg\",                           // 配置类型，这里只能为cppdbg\r\n\r\n            \"request\": \"launch\",                        // 请求配置类型，可以为launch（启动）或attach（附加）\r\n\r\n            \"launchOptionType\": \"Local\",                // 调试器启动类型，这里只能为Local\r\n\r\n            \"targetArchitecture\": \"x86\",                // 生成目标架构，一般为x86或x64，可以为x86, arm, arm64, mips, x64, amd64, x86_64\r\n\r\n            \"program\": \"${file}.exe\",                   // 将要进行调试的程序的路径\r\n\r\n            \"miDebuggerPath\":\"a:\\\\MinGW\\\\bin\\\\gdb.exe\", // miDebugger的路径，注意这里要与MinGw的路径对应\r\n\r\n            \"args\": [\"blackkitty\",  \"1221\", \"# #\"],     // 程序调试时传递给程序的命令行参数，一般设为空即可\r\n\r\n            \"stopAtEntry\": false,                       // 设为true时程序将暂停在程序入口处，一般设置为false\r\n\r\n            \"cwd\": \"${workspaceRoot}\",                  // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录\r\n\r\n            \"externalConsole\": true,                    // 调试时是否显示控制台窗口，一般设置为true显示控制台\r\n\r\n            \"preLaunchTask\": \"g++\"　　                  // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc\r\n\r\n        }\r\n\r\n    ]\r\n\r\n}\r\n`\r\n\r\n这里要**注意miDebuggerPath要与MinGw的路径对应 **\r\n\r\n替换后保存，然后切换至test.cpp，按F5进行调试，此时会弹出一个信息框要求你配置任务运行程序，点击它~ \r\n\r\n![image](https://github.com/Fuyi-Huang/Fuyi-Huang.github.io-vscode-c/raw/master/pictures/capture5.jpg)\r\n\r\n在这里随便选一个：**这里选择MSBuild的话，你就可以按F5的时候顺便执行生成的程序。**\r\n\r\n![image](https://github.com/Fuyi-Huang/Fuyi-Huang.github.io-vscode-c/raw/master/pictures/capture6.jpg)\r\n然后用下面代码替换：\r\n\r\n`\r\n{\r\n\r\n    \"version\": \"0.1.0\",\r\n\r\n    \"command\": \"g++\",\r\n\r\n    \"args\": [\"-g\",\"${file}\",\"-o\",\"${file}.exe\"],    // 编译命令参数\r\n\r\n    \"problemMatcher\": {\r\n\r\n        \"owner\": \"cpp\",\r\n\r\n        \"fileLocation\": [\"relative\", \"${workspaceRoot}\"],\r\n\r\n        \"pattern\": {\r\n\r\n            \"regexp\": \"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\",\r\n\r\n            \"file\": 1,\r\n\r\n            \"line\": 2,\r\n\r\n            \"column\": 3,\r\n\r\n            \"severity\": 4,\r\n\r\n            \"message\": 5\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n`\r\n保存一下，然后切换至test.cpp，再次按F5启动调试~ \r\n\r\n![image](https://github.com/Fuyi-Huang/Fuyi-Huang.github.io-vscode-c/raw/master/pictures/capture7.jpg)\r\n\r\n\r\n撒花!",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}